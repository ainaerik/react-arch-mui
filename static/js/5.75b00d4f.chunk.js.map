{"version":3,"sources":["pages/Home/styles.ts","pages/Home/Home.tsx"],"names":["useStyles","makeStyles","root","minHeight","Home","props","t","useTranslation","classes","useContext","ThemeContext","mode","toggleMode","AppContext","lang","setLang","handleChangeLang","Layout","title","Box","className","Typography","variant","Button","onClick","ButtonGroup","disableElevation","disabled"],"mappings":"gQAQeA,EANGC,YAAW,CAC3BC,KAAM,CACJC,UAAW,O,+BC2DAC,EAzCa,SAACC,GAAW,IAC9BC,EAAMC,YAAe,UAArBD,EACFE,EAAUR,IAFqB,EAQRS,qBAAWC,KAAhCC,EAR6B,EAQ7BA,KAAMC,EARuB,EAQvBA,WARuB,EASXH,qBAAWI,KAA7BC,EAT6B,EAS7BA,KAAMC,EATuB,EASvBA,QAMRC,EAAmB,SAACF,GACxBC,EAAQD,IAGV,OACE,cAACG,EAAA,EAAD,CAAQC,MAAOZ,EAAE,aAAjB,SACE,eAACa,EAAA,EAAD,CAAKC,UAAWZ,EAAQN,KAAxB,UACE,cAACmB,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BhB,EAAE,qBAC5B,cAACiB,EAAA,EAAD,CAAQD,QAAQ,YAAYE,QAZR,WACxBZ,KAWI,SACY,UAATD,EAAmB,cAAC,IAAD,IAAgB,cAAC,IAAD,MAC5B,IACV,eAACc,EAAA,EAAD,CAAaC,kBAAgB,EAACJ,QAAQ,YAAtC,UACE,cAACC,EAAA,EAAD,CAAQI,SAAmB,OAATb,EAAeU,QAAS,kBAAMR,EAAiB,OAAjE,gBAGA,cAACO,EAAA,EAAD,CAAQI,SAAmB,OAATb,EAAeU,QAAS,kBAAMR,EAAiB,OAAjE,mBAIF,uBACA","file":"static/js/5.75b00d4f.chunk.js","sourcesContent":["import { makeStyles } from '@mui/styles'\n\nconst useStyles = makeStyles({\n  root: {\n    minHeight: 300,\n  },\n})\n\nexport default useStyles\n","import React, { FC, useContext } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport DarkIcon from '@mui/icons-material/Brightness7'\nimport LightIcon from '@mui/icons-material/Brightness4'\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport Typography from '@mui/material/Typography'\n\nimport useStyles from './styles'\nimport ThemeContext from '@contexts/ThemeContext'\nimport AppContext from '@contexts/AppContext'\nimport Layout from '@components/Layout/Layout'\nimport AppLang from '@interfaces/AppLang'\n\ninterface HomeProps {}\n\n/**\n * Home\n * @param props HomeProps\n * @returns\n */\nconst Home: FC<HomeProps> = (props) => {\n  const { t } = useTranslation('common')\n  const classes = useStyles()\n\n  /**\n   * INFO:\n   * The content of this page is just to simulate a theme mode\n   */\n  const { mode, toggleMode } = useContext(ThemeContext)\n  const { lang, setLang } = useContext(AppContext)\n\n  const handleChangeTheme = () => {\n    toggleMode()\n  }\n\n  const handleChangeLang = (lang: AppLang) => {\n    setLang(lang)\n  }\n\n  return (\n    <Layout title={t('tabs.home')}>\n      <Box className={classes.root}>\n        <Typography variant=\"h1\">{t('pages.home.text')}</Typography>\n        <Button variant=\"contained\" onClick={handleChangeTheme}>\n          {mode === 'light' ? <LightIcon /> : <DarkIcon />}\n        </Button>{' '}\n        <ButtonGroup disableElevation variant=\"contained\">\n          <Button disabled={lang === 'en'} onClick={() => handleChangeLang('en')}>\n            EN\n          </Button>\n          <Button disabled={lang === 'fr'} onClick={() => handleChangeLang('fr')}>\n            FR\n          </Button>\n        </ButtonGroup>\n        <br />\n        <br />\n      </Box>\n    </Layout>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}